# -*- coding: utf-8 -*-
"""screen_beta_3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RofcS56wRaRz1Sq0lm10knlK9rmVXRHR
"""

import streamlit as st

# Page config
st.set_page_config(page_title="ChatGPT Black", layout="centered")

# Custom CSS
st.markdown(
    """
    <style>
    .stApp {
        background-color: #0d0d0d;
        color: #e0e0e0;
        padding-bottom: 100px;
    }

    .chat-container {
        display: flex;
        flex-direction: column;
        height: 70vh;
        overflow-y: auto;
        padding: 10px;
        border: 1px solid #333;
        border-radius: 10px;
        background-color: #121212;
    }

    .user-msg, .bot-msg {
        font-size: 16px;
        padding: 12px 16px;
        margin: 10px 0;
        border-radius: 20px;
        width: fit-content;
        max-width: 85%;
        display: inline-block;
    }

    .user-msg {
        background-color: #1f5130;
        color: #d9fdd3;
        align-self: flex-end;
        margin-left: auto;
    }

    .bot-msg {
        background-color: #202124;
        color: #c8e1ff;
        align-self: flex-start;
        margin-right: auto;
    }

    .bottom-input {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        width: 100%;
        background-color: #0d0d0d;
        padding: 20px;
        box-shadow: 0 -2px 10px rgba(0,0,0,0.4);
        z-index: 10;
    }

    input[type="text"] {
        background-color: #1e1e1e;
        color: #fff;
        padding: 12px;
        border-radius: 10px;
        border: none;
        width: 100%;
    }
    </style>
    """,
    unsafe_allow_html=True
)

# Title
st.title("üñ§ ChatGPT Black Theme")

# Initialize session state
if "messages" not in st.session_state:
    st.session_state.messages = []

# Chat container
st.markdown('<div class="chat-container">', unsafe_allow_html=True)
for msg in st.session_state.messages:
    role_class = "user-msg" if msg["role"] == "user" else "bot-msg"
    emoji = "üßë‚Äçüíª" if msg["role"] == "user" else "ü§ñ"
    st.markdown(f'<div class="{role_class}">{emoji} {msg["content"]}</div>', unsafe_allow_html=True)
st.markdown('</div>', unsafe_allow_html=True)

# Input box fixed to bottom
st.markdown('<div class="bottom-input">', unsafe_allow_html=True)
user_input = st.text_input("You:", key="input", label_visibility="collapsed", placeholder="Type your message...")
st.markdown('</div>', unsafe_allow_html=True)

# Handle message
if user_input:
    st.session_state.messages.append({"role": "user", "content": user_input})
    response = "ü§ñ Placeholder response to your message."
    st.session_state.messages.append({"role": "bot", "content": response})
    st.experimental_rerun()